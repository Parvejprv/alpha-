// Solution : 2 

import java.io.*;
import java.util.*;

public class Solution {
    public static int Reverse(int n){		// 1234
        Stack<Integer> st = new Stack<>();
        
        int num = n;
        
        while(num > 0){						// num = 1234
            st.push(num%10);			// lastDig = 1234%10 = 4
            num = num/10;				// num = num/10 --> 1234/10 = 123
        }
        
        // now, print the stack element
        int ans = 0;
        for(int ele : st){
            ans = ans*10 + ele;
        }
        
        return ans;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        
        int t = sc.nextInt();		// 
        
        for(int i=0; i<t; i++){
            int n = sc.nextInt();	
            System.out.println(Reverse(n));
        }
    }
}





// Solution : 1 

import java.util.*;

public class Solution {

    public static int reverse(int n) {

        // Create a stack first
        Stack<Integer> st = new Stack<>();

        int temp = n;

        // 1. fill the stack
        while (temp > 0) {
            st.push(temp % 10);
            temp = temp / 10;
        }

        int res = 0;
        int p = 1;

        while (st.size() != 0) {
            int digit = st.pop();
            if (res == 0 && digit == 0) {
                continue;
            } else {
                res += digit * p;
                p *= 10;
            }
        }
        return res;

    }

    public static void main(String[] args) {
        Scanner scn = new Scanner(System.in);
        int t = scn.nextInt();

        for (int i = 0; i < t; i++) {
            int n = scn.nextInt();
            int ans = reverse(n);
            System.out.println(ans);
        }
    }
}
